{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const register = createAsyncThunk(\"auth/register\", async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectwithValue(message);\n  }\n});\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectwithValue(message);\n  }\n});\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  authService.logout();\n});\nexport const activate = createAsyncThunk(\"auth/activate\", async (user, thunkAPI) => {\n  try {\n    return await authService.activate(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectwithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    }\n  },\n  extrareducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action, sa) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      satisfies.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    }).addCase(activate.pending, state => {\n      state.isLoading = true;\n    }).addCase(activate.pending, state => {\n      state.isLoading = false;\n    }).addCase(activate.fulfilled, state => {\n      state.isLoading = false;\n      state.isSuccess = true;\n    }).addCase(activate.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isLoading","isSuccess","message","register","thunkAPI","error","response","data","toString","rejectwithValue","login","logout","activate","authSlice","name","reducers","reset","state","extrareducers","builder","addCase","pending","fulfilled","action","payload","rejected","sa","satisfies","actions","reducer"],"sources":["/home/cephus/Documents/real-estate/estatesrc/real_estate/client/src/features/auth/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport authService from \"./authService\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = {\n    user: user ? user: null,\n    isError: false,\n    isLoading: false,\n    isSuccess: false,\n    message: \"\",\n};\n\nexport const register = createAsyncThunk(\n    \"auth/register\",\n    async (user, thunkAPI) => {\n        try {\n            return await authService.register(user);\n        } catch (error) {\n            const message = \n                (error.response && \n                    error.response.data && \n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            return thunkAPI.rejectwithValue(message);\n        }\n    }\n);\n\nexport const login = createAsyncThunk(\"auth/login\", async(user, thunkAPI)=>{\n    try {\n        return await authService.login(user);\n    }catch (error) {\n        const message = (\n            error.response &&\n                error.response.data &&\n                error.response.data.message\n            ) || \n            error.message ||\n            error.toString();\n        return thunkAPI.rejectwithValue(message)\n    }\n});\n\nexport const logout = createAsyncThunk(\"auth/logout\", async () =>{\n    authService.logout();\n});\n\nexport const activate = createAsyncThunk(\n    \"auth/activate\",\n    async (user, thunkAPI) => {\n        try {\n            return await authService.activate(user);\n        } catch (error) {\n            const message = (\n                error.response && \n                    error.response.data &&\n                    error.response.data.message\n                ) ||   \n                error.message ||\n                error.toString();\n            return thunkAPI.rejectwithValue(message)\n        }\n    }\n);\n\nexport const authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        reset: (state) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = false;\n            state.message = \"\"\n        },\n    },\n    extrareducers: (builder) =>{\n        builder\n            .addCase(register.pending, (state) =>{\n                state.isLoading= true;\n            })\n            .addCase(register.fulfilled, (state, action)=> {\n                state.isLoading = false;\n                state.isSuccess = true\n                state.user = action.payload;\n            })\n            .addCase(register.rejected, (state,action)=> {\n                state.isLoading = false;\n                state.isError = true;\n                state.message = action.payload;\n                state.user = null;\n            })\n            .addCase(login.pending, (state)=>{\n                state.isLoading = true;\n            })\n            .addCase(login.fulfilled, (state,action)=>{\n                state.isLoading = false;\n                state.isSuccess = true;\n                state.user = action.payload;\n            })\n            .addCase(login.rejected,(state, action, sa)=>{\n                state.isLoading = false;\n                state.isError = true;\n                state.message = action.payload;\n                satisfies.user = null;\n            })\n            .addCase(logout.fulfilled, (state)=>{\n                state.user= null;\n            })\n            .addCase(activate.pending, (state)=>{\n                state.isLoading = true\n            })\n            .addCase(activate.pending, (state)=>{\n                state.isLoading = false;\n            })\n            .addCase(activate.fulfilled, (state)=>{\n                state.isLoading = false;\n                state.isSuccess = true;\n            })\n            .addCase(activate.rejected, (state, action)=>{\n                state.isLoading= false;\n                state.isError = true;\n                state.message= action.payload;\n                state.user = null;\n            })\n    }\n});\n\nexport const { reset } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AAErD,MAAMC,YAAY,GAAG;EACjBL,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAE,IAAI;EACvBM,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGb,gBAAgB,CACpC,eAAe,EACf,OAAOG,IAAI,EAAEW,QAAQ,KAAK;EACtB,IAAI;IACA,OAAO,MAAMZ,WAAW,CAACW,QAAQ,CAACV,IAAI,CAAC;EAC3C,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZ,MAAMH,OAAO,GACRG,KAAK,CAACC,QAAQ,IACXD,KAAK,CAACC,QAAQ,CAACC,IAAI,IACnBF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACL,OAAO,IAC/BG,KAAK,CAACH,OAAO,IACbG,KAAK,CAACG,QAAQ,CAAC,CAAC;IAEpB,OAAOJ,QAAQ,CAACK,eAAe,CAACP,OAAO,CAAC;EAC5C;AACJ,CACJ,CAAC;AAED,OAAO,MAAMQ,KAAK,GAAGpB,gBAAgB,CAAC,YAAY,EAAE,OAAMG,IAAI,EAAEW,QAAQ,KAAG;EACvE,IAAI;IACA,OAAO,MAAMZ,WAAW,CAACkB,KAAK,CAACjB,IAAI,CAAC;EACxC,CAAC,QAAOY,KAAK,EAAE;IACX,MAAMH,OAAO,GACTG,KAAK,CAACC,QAAQ,IACVD,KAAK,CAACC,QAAQ,CAACC,IAAI,IACnBF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACL,OAAO,IAE/BG,KAAK,CAACH,OAAO,IACbG,KAAK,CAACG,QAAQ,CAAC,CAAC;IACpB,OAAOJ,QAAQ,CAACK,eAAe,CAACP,OAAO,CAAC;EAC5C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMS,MAAM,GAAGrB,gBAAgB,CAAC,aAAa,EAAE,YAAW;EAC7DE,WAAW,CAACmB,MAAM,CAAC,CAAC;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAGtB,gBAAgB,CACpC,eAAe,EACf,OAAOG,IAAI,EAAEW,QAAQ,KAAK;EACtB,IAAI;IACA,OAAO,MAAMZ,WAAW,CAACoB,QAAQ,CAACnB,IAAI,CAAC;EAC3C,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZ,MAAMH,OAAO,GACTG,KAAK,CAACC,QAAQ,IACVD,KAAK,CAACC,QAAQ,CAACC,IAAI,IACnBF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACL,OAAO,IAE/BG,KAAK,CAACH,OAAO,IACbG,KAAK,CAACG,QAAQ,CAAC,CAAC;IACpB,OAAOJ,QAAQ,CAACK,eAAe,CAACP,OAAO,CAAC;EAC5C;AACJ,CACJ,CAAC;AAED,OAAO,MAAMW,SAAS,GAAGtB,WAAW,CAAC;EACjCuB,IAAI,EAAE,MAAM;EACZhB,YAAY;EACZiB,QAAQ,EAAE;IACNC,KAAK,EAAGC,KAAK,IAAK;MACdA,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAACf,OAAO,GAAG,EAAE;IACtB;EACJ,CAAC;EACDgB,aAAa,EAAGC,OAAO,IAAI;IACvBA,OAAO,CACFC,OAAO,CAACjB,QAAQ,CAACkB,OAAO,EAAGJ,KAAK,IAAI;MACjCA,KAAK,CAACjB,SAAS,GAAE,IAAI;IACzB,CAAC,CAAC,CACDoB,OAAO,CAACjB,QAAQ,CAACmB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAI;MAC3CN,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAAChB,SAAS,GAAG,IAAI;MACtBgB,KAAK,CAACxB,IAAI,GAAG8B,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACjB,QAAQ,CAACsB,QAAQ,EAAE,CAACR,KAAK,EAACM,MAAM,KAAI;MACzCN,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAAClB,OAAO,GAAG,IAAI;MACpBkB,KAAK,CAACf,OAAO,GAAGqB,MAAM,CAACC,OAAO;MAC9BP,KAAK,CAACxB,IAAI,GAAG,IAAI;IACrB,CAAC,CAAC,CACD2B,OAAO,CAACV,KAAK,CAACW,OAAO,EAAGJ,KAAK,IAAG;MAC7BA,KAAK,CAACjB,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDoB,OAAO,CAACV,KAAK,CAACY,SAAS,EAAE,CAACL,KAAK,EAACM,MAAM,KAAG;MACtCN,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAAChB,SAAS,GAAG,IAAI;MACtBgB,KAAK,CAACxB,IAAI,GAAG8B,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACV,KAAK,CAACe,QAAQ,EAAC,CAACR,KAAK,EAAEM,MAAM,EAAEG,EAAE,KAAG;MACzCT,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAAClB,OAAO,GAAG,IAAI;MACpBkB,KAAK,CAACf,OAAO,GAAGqB,MAAM,CAACC,OAAO;MAC9BG,SAAS,CAAClC,IAAI,GAAG,IAAI;IACzB,CAAC,CAAC,CACD2B,OAAO,CAACT,MAAM,CAACW,SAAS,EAAGL,KAAK,IAAG;MAChCA,KAAK,CAACxB,IAAI,GAAE,IAAI;IACpB,CAAC,CAAC,CACD2B,OAAO,CAACR,QAAQ,CAACS,OAAO,EAAGJ,KAAK,IAAG;MAChCA,KAAK,CAACjB,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDoB,OAAO,CAACR,QAAQ,CAACS,OAAO,EAAGJ,KAAK,IAAG;MAChCA,KAAK,CAACjB,SAAS,GAAG,KAAK;IAC3B,CAAC,CAAC,CACDoB,OAAO,CAACR,QAAQ,CAACU,SAAS,EAAGL,KAAK,IAAG;MAClCA,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAAChB,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDmB,OAAO,CAACR,QAAQ,CAACa,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAG;MACzCN,KAAK,CAACjB,SAAS,GAAE,KAAK;MACtBiB,KAAK,CAAClB,OAAO,GAAG,IAAI;MACpBkB,KAAK,CAACf,OAAO,GAAEqB,MAAM,CAACC,OAAO;MAC7BP,KAAK,CAACxB,IAAI,GAAG,IAAI;IACrB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEuB;AAAM,CAAC,GAAGH,SAAS,CAACe,OAAO;AAE1C,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}