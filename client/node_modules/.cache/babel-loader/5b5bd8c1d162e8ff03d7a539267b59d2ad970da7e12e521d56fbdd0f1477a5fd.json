{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport propertyAPIService from \"./propertyAPIService\";\nconst initialState = {\n  properties: [],\n  property: {},\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\n\n// get all properties\nexport const getProperties = createAsyncThunk(\"properties/getAll\", async (_, thunkAPI) => {\n  try {\n    return await propertyAPIService.getProperties();\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const propertySlice = createSlice({\n  name: \"property\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(getProperties.pending, state => {\n      state.isLoading = true;\n    }).addCase(getProperties.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.properties = action.payload.results;\n    }).addCase(getProperties.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = propertySlice.actions;\nexport default propertySlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","propertyAPIService","initialState","properties","property","isError","isLoading","isSuccess","message","getProperties","_","thunkAPI","error","response","data","toString","rejectWithValue","propertySlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","results","rejected","actions","reducer"],"sources":["/home/cephus/Documents/real-estate/estatesrc/real_estate/client/src/features/properties/propertySlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport propertyAPIService from \"./propertyAPIService\";\n\nconst initialState = {\n    properties: [],\n    property: {},\n    isError: false,\n    isLoading: false,\n    isSuccess: false,\n    message: \"\",\n};\n\n// get all properties\nexport const getProperties = createAsyncThunk(\n    \"properties/getAll\",\n    async (_, thunkAPI) => {\n        try {\n            return await propertyAPIService.getProperties();\n        } catch (error) {\n            const message = \n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n            \n            return thunkAPI.rejectWithValue(message);\n        }\n    }\n);\n\n\nexport const propertySlice = createSlice({\n    name: \"property\",\n    initialState,\n    reducers: {\n        reset: (state) => initialState,\n    },\n    extraReducers: (builder)=> {\n        builder\n            .addCase(getProperties.pending, (state) =>{\n                state.isLoading = true;\n            })\n            .addCase(getProperties.fulfilled, (state, action)=> {\n                state.isLoading = false;\n                state.isSuccess = true;\n                state.properties =action.payload.results;\n            })\n            .addCase(getProperties.rejected, (state, action) =>{\n                state.isLoading=false;\n                state.isError=true;\n                state.message = action.payload;\n            })\n    }\n});\n\nexport const { reset } = propertySlice.actions;\nexport default propertySlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,kBAAkB,MAAM,sBAAsB;AAErD,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,EAAE;EACdC,QAAQ,EAAE,CAAC,CAAC;EACZC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAGV,gBAAgB,CACzC,mBAAmB,EACnB,OAAOW,CAAC,EAAEC,QAAQ,KAAK;EACnB,IAAI;IACA,OAAO,MAAMV,kBAAkB,CAACQ,aAAa,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,MAAMJ,OAAO,GACRI,KAAK,CAACC,QAAQ,IACXD,KAAK,CAACC,QAAQ,CAACC,IAAI,IACnBF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACN,OAAO,IAC/BI,KAAK,CAACJ,OAAO,IACbI,KAAK,CAACG,QAAQ,CAAC,CAAC;IAEpB,OAAOJ,QAAQ,CAACK,eAAe,CAACR,OAAO,CAAC;EAC5C;AACJ,CACJ,CAAC;AAGD,OAAO,MAAMS,aAAa,GAAGjB,WAAW,CAAC;EACrCkB,IAAI,EAAE,UAAU;EAChBhB,YAAY;EACZiB,QAAQ,EAAE;IACNC,KAAK,EAAGC,KAAK,IAAKnB;EACtB,CAAC;EACDoB,aAAa,EAAGC,OAAO,IAAI;IACvBA,OAAO,CACFC,OAAO,CAACf,aAAa,CAACgB,OAAO,EAAGJ,KAAK,IAAI;MACtCA,KAAK,CAACf,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDkB,OAAO,CAACf,aAAa,CAACiB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAI;MAChDN,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAACd,SAAS,GAAG,IAAI;MACtBc,KAAK,CAAClB,UAAU,GAAEwB,MAAM,CAACC,OAAO,CAACC,OAAO;IAC5C,CAAC,CAAC,CACDL,OAAO,CAACf,aAAa,CAACqB,QAAQ,EAAE,CAACT,KAAK,EAAEM,MAAM,KAAI;MAC/CN,KAAK,CAACf,SAAS,GAAC,KAAK;MACrBe,KAAK,CAAChB,OAAO,GAAC,IAAI;MAClBgB,KAAK,CAACb,OAAO,GAAGmB,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAM,CAAC,GAAGH,aAAa,CAACc,OAAO;AAC9C,eAAed,aAAa,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}